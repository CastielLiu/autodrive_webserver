# 将此文件链接至服务器/etc/nginx/conf.d目录下, 重启nginx服务后将自动调用

# 负载均衡分配方式https://blog.csdn.net/daily886/article/details/84313917
upstream uwsgibackend {
    server 127.0.0.1:9998;
}

upstream wsbackend {
    server 127.0.0.1:9995;
}

# configuration of the server
server {
    # the port your site will be served on
    # 当多个项目配置同一个端口时将出现错误(除非项目不同时运行)
    # 利用$nmap 公网ip 可查询公网对外开放的端口号,以及其使用状态, 然后为不同的项目配置不同的端口
    listen      8000;  #nginx用于监听的端口(外网用此端口访问)
    # the domain name it will serve for
    server_name 36.155.113.13 ; #服务器公网ip
    charset     utf-8;

    # max upload size
    client_max_body_size 100M;   # adjust to taste

    location /static {
        # 此静态目录与uwsgi的静态目录相同且生成方法一致
        # 当nginx配置了静态文件路由之后,静态请求将不再转发给uwsgi
        alias /root/seu/autodrive_webserver/collectstatic;
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        # 利用upstream配置多个服务器地址,实现负载均衡
        uwsgi_pass  uwsgibackend;  #对接uwsgi, 与nginx_uwsgi.ini中务必一致
        include     /etc/nginx/uwsgi_params;
    }

     location /ws {
        # proxy_pass http://127.0.0.1:9995; #仅有一个服务器
        # 利用upstream配置多个服务器地址,实现负载均衡
        proxy_pass http://wsbackend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
  }
}
